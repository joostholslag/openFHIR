engine: FHIRConnect/v0.0.1
type: extension
metadata:
  name: KDS_laborbericht
  version: 0.0.1a
spec:
  system: FHIR
  version: R4
  extends: OBSERVATION.laboratory_test_result.v1

mappings:

  - name: "result" #/data[at0001]/events[at0002] add new for each laboratory analyte.
    extension: "add"
    with:
      fhir: "$resource.result"
      openehr: "$reference" #will create FOR each result ONE event.
    reference:
      resourceType: "Observation"
      mappings:
        - name: "observationRecurring"
          with:
            fhir: "$fhirRoot"
            openehr: "$archetype/data[at0001]/events[at0002]/data[at0003]/items[openEHR-EHR-CLUSTER.laboratory_test_analyte.v1]"
          slotArchetype: "CLUSTER.laboratory_test_analyte.v1"

  #  - name: "fallIdentifikationIdentifier"
  #    extension: "add"
  #    with:
  #      fhir: "$resource.encounter.identifier"
  #      # todo: not ok; slotArchetype CLUSTER.case_identification has a "case_identifier", BUT this template requires a "fall-kennung".
  #      openehr: "$archetype/context/other_context[at0001]/items[openEHR-EHR-CLUSTER.case_identification.v0]"
  #    slotArchetype: "CLUSTER.case_identification.v0"

  #  - name: "fallIdentifikationReference" # if reference is accessible overwrite fallIdentifikationIdentifier
  #    extension: "add"
  #    with:
  #      fhir: "$resource.encounter.reference"
  #      openehr: "$reference"
  #    reference: #type None
  #      resourceType: "Encounter"
  #      mappings:
  #        - name: "identifierInReference"
  #          with:
  #            fhir: "$fhirRoot.identifier"
  #            openehr: "$archetype/context/other_context[at0001]/items[openEHR-EHR-CLUSTER.case_identification.v0]"
  #          slotArchetype: "CLUSTER.case_identification.v0"
  #        - name: "encounterMapping"
  #          with:
  #            fhir: "$fhirRoot"
  #            openehr: "$archetype/context/other_context[at0001]/items[openEHR-EHR-CLUSTER.case_identification.v0]/links" # will use link
  #            type: "REFERENCED_MAPPING" # execute mapping or use already mapped one to get Composition URI
  #            openehrLink:
  #              meaning: "the case this composition relates to"
  #              type: "case"


  - name: "status" #TODO @deprecated needs to go once mapping is updated
    extension: "overwrite"
    with:
      fhir: "$resource.status"
      openehr: "$composition/context/other_context[at0001]/items[at0005]"

  - name: "berichtIdParent"
    extension: "add"
    with:
      fhir: "$resource.identifier"
      openehr: "$composition/context/other_context[at0001]/items[at0002]"
    fhirCondition:
      targetRoot: "$resource.identifier"
      targetAttribute: "type.coding.code"
      operator: "one of"
      criteria: "[FILL]"
    followedBy:
      mappings:
        - name: "berichtId"
          extension: "add"
          with:
            fhir: "value"
            openehr: "$composition/context/other_context[at0001]/items[at0002]"
            type: "STRING"
        - name: "typeSystem"
          with:
            fhir: "type.coding.system"
            value: "http://terminology.hl7.org/CodeSystem/v2-0203"






