engine: FHIRConnect/v0.0.1
type: model
metadata:
  name: OBSERVATION.medication_statement.v0
  version: 0.0.1a # version of this particular mapping
spec: # schema specific to the FHIRConnect v0.0.1 engine
  system: FHIR
  version: R4
  openEhrConfig:
    archetype: openEHR-EHR-OBSERVATION.medication_statement.v0
    revision: 0.0.1a

mappings:

  - name: "hierarchyMappings" # is defined by the
    with:
      fhir: "$resource.dosage"
      openEHR: "$archetype/data[at0001]/events[at0002]"
  #    type: "HIERARCHY"
    hierarchy:
      fhirCreate: "resource"
      openehrCreate: "event"
      uniqueValueFHIR: "[route, timing.event]" # if route value is different per dosage slice make a new event
      uniqueValueOpenEHR: "['/data[at0003]/items[openEHR-EHR-CLUSTER.medication.v2]/items[at0132]']"

  - name: "healthcareFacility"
    with:
      fhir: "$resource.informationSource.as(Organization)"
      openehr: "$composition/context/health_care_facility"

  - name: "dateAsserted"
    with:
      fhir: "$resource.dateAsserted"
      openehr: "$composition/context/start_time"

  - name: "provider"
    with:
      fhir: "$resource.informationSource"
      openehr: "$archetype/provider"

  - name: "composer"
    with:
      fhir: "$resource.informationSource"
      openehr: "$composition/composer" # often required therefore simplified mapping engine is to resolve Reference -> Composer

  - name: "eventTime"
    with:
      fhir: "$resource.effective"
      openEHR: "$archetype/data[at0001]/events[at0002]" # period -> interval event, datetime to pointInTime event

  - name: "reasonCode"
    with:
      fhir: "$resource.reasonCode"
      openehr: "/data[at0001]/events[at0002]/data[at0003]/items[at0023]"

  - name: "note"
    with:
      fhir: "$resource.note.text"
      openehr: "$archetype/data[at0001]/events[at0002]/data[at0003]/items[at0029]"

  - name: "dosage"
    with:
      fhir: "$resource.dosage"
      openehr: "$archetype/data[at0001]/events[at0002]/data[at0003]/items[openEHR-EHR-CLUSTER.dosage.v2]"
    slotArchetype: "CLUSTER.dosage.v2"

  - name: "medication"
    with:
      fhir: "$resource.medication.reference"
      openehr: "$reference"
    reference:
      resourceType: "Medication"
      mappings:
        - name: "medicationReference"
          with:
            fhir: "$fhirRoot"
            openehr: "$archetype/data[at0001]/events[at0002]/data[at0003]/items[openEHR-EHR-CLUSTER.medication.v2]"
          slotArchetype: "CLUSTER.medication.v2.medication-to-medication" # depending on the resourceType picks the correct one

  - name: "medicationCode"
    with:
      fhir: "$resource.medication.as(CodeableConcept)"
      openehr: "$archetype/items[openEHR-EHR-CLUSTER.medication.v2]/items[at0132]"
    openehrCondition:
      targetRoot: "$archetype/items[openEHR-EHR-CLUSTER.medication.v2]"
      targetAttribute: "['/items[at0071]', '/items[at0115]', '/items[openEHR-EHR-CLUSTER.medication.v2]', '/items[at0133]', '/items[openEHR-EHR-CLUSTER.drug_class.v0]']"
      operator: "empty"

  - name: "route"
    with:
      fhir: "$resource.dosage.route"
      openehr: "/data[at0001]/events[at0002]/data[at0003]/items[at0030]"

  - name: "reasonCode"
    with:
      fhir: "$resource.reasonCode"
      openehr: "/data[at0001]/events[at0002]/data[at0003]/items[at0023]"

  - name: "reasonReference"
    with:
      fhir: "$resource.reasonReference.reference"
      openehr: "$reference"
    reference:
      mappings:
        - name: "identifierInReference"
          with:
            fhir: "$fhirRoot.identifier" # TODO @gasper does this work, should take identifier either of Reference or of Resource
            openehr: "$archetype/data[at0001]/events[at0002]/data[at0003]/items[at0023]"
        - name: "derivedFrom"
          with:
            fhir: "$fhirRoot"
            openehr: "$archetype/data[at0001]/events[at0002]/data[at0003]/items[at0023]links" # will use link
            type: "REFERENCED_MAPPING" # execute mapping or use already mapped one to get Composition URI
            openehrLink:
              meaning: "what the medication derived from"
              type: "derivedFrom"

  - name: "partOf"
    with:
      fhir: "$resource.partOf.reference"
      openehr: "$reference"
    reference:
      mappings:
        - name: "partOfReference"
          with:
            fhir: "$fhirRoot"
            openehr: "$archetype/links" # will use link
            type: "REFERENCED_MAPPING" # execute mapping or use already mapped one to get Composition URI
            openehrLink:
              meaning: "what the medication is part of"
              type: "partOf"

  - name: "basedOn"
    with:
      fhir: "$resource.basedOn.reference"
      openehr: "$reference"
    reference:
      mappings:
        - name: "partOfReference"
          with:
            fhir: "$fhirRoot"
            openehr: "$archetype/links" # will use link
            type: "REFERENCED_MAPPING" # execute mapping or use already mapped one to get Composition URI
            openehrLink:
              meaning: "what the medication is based on"
              type: "basedOn"

  - name: "derivedFrom"
    with:
      fhir: "$resource.basedOn.reference"
      openehr: "$reference"
    reference:
      mappings:
        - name: "partOfReference"
          with:
            fhir: "$fhirRoot"
            openehr: "$archetype/links" # will use link
            type: "REFERENCED_MAPPING" # execute mapping or use already mapped one to get Composition URI
            openehrLink:
              meaning: "what the medication is derived from"
              type: "derivedFrom"

