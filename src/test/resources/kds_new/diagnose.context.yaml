format: "0.2.0"

openEHR:
  templateId: "KDS_Diagnose"
  archetypes:
    - "openEHR-EHR-CLUSTER.anatomical_location.v1" # i dont think we need to list clusters here ? 
    - "openEHR-EHR-CLUSTER.lebensphase.v0"
    - "openEHR-EHR-CLUSTER.multiple_coding_icd10gm.v1"
  profiles: #i think profiles are maybe enough, instead of the vanilla ones if we got updated ones. 
    - "KDS_openEHR-EHR-EVALUATION.problem_diagnosis.v1"
    - "KDS_openEHR-EHR-CLUSTER.problem_qualifier.v2"
    -  # maybe here we should use a too muhc archetype like path, could be confusing


# Or we overload kind off the archetypes 
  archetypes:
    - "openEHR-EHR-CLUSTER.anatomical_location.v1"
    - "openEHR-EHR-CLUSTER.lebensphase.v0"
    - "openEHR-EHR-CLUSTER.multiple_coding_icd10gm.v1"
    - "KDS_openEHR-EHR-EVALUATION.problem_diagnosis.v1"
    - "KDS_openEHR-EHR-CLUSTER.problem_qualifier.v2" #Here the use of clusters has advantages that we can overwrite the vanilla ones

fhir:
  resourceType: "Bundle"
  condition:
    targetRoot: "$fhirResource"
    targetAttribute: "entry.resource.meta.profile"
    operator: "one of"
    criteria: "[https://www.medizininformatik-initiative.de/fhir/core/modul-diagnose/StructureDefinition/Diagnose]"


#Add ways to link references here, also when linking in the end the engine should search for context mappings that fit the resource added in the condition. 